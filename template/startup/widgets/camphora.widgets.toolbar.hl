/*
 * This file creates the __[camphora.xxx.widgets.toolbar]__ extension widget.
 */

/*
 * This extension widget allows you to display your Camphora Five
 * CRUD app as a widget, injecting the entire app, anywhere on your
 * page. The extension widget takes the following arguments.
 *
 * - __[datagrid]__ - The widget id of the __[camphora.xxx.widgets.datagrid]__ instance this toolbar co-exists with.
 * This argument must be the ID of a datagrid on your page.
 * - __[main-toolbar]__ - Whether or not the main toolbar should be created or not. The default value of this argument is _"false"_.
 *
 * The above __[main-toolbar]__ argument can optionally be given the following sub arguments, which is only applied
 * if the toolbar is actually displayed.
 *
 * - __[edit-items]__ - Whether or not editing (and hence deletion) of items should be allowed. The default value for this argument is boolean _"false"_.
 * - __[download-items]__ - Whether or not downloading of items to CSV file should be allowed. The default value for this argument is boolean _"false"_.
 *
 * __Notice__, this event is dynamically created for each of your Camphora Five apps, and its
 * exact name varies from app to app, since the `{0}` parts of it is replaced with your
 * app's name.
 */
create-event:camphora.widgets.toolbar

  /*
   * Sanity checking invocation.
   */
  micro.lambda.contract.min:x:/..
    datagrid:string

  /*
   * Defaults.
   */
  .defaults
    main-toolbar:bool:false
      edit-items:bool:false
      download-items:bool:false

  /*
   * Checking if caller does not want a main toolbar, at which
   * point we delete the main toolbar entirely from the return widget.
   */
  if:x:(/../*/main-toolbar|/@.defaults/*/main-toolbar)/$?value.bool
    =:bool:false

    /*
     * Removing main toolbar.
     */
    set:x:/../*/return/*/div/*/widgets/0

  else

    /*
     * Checking if caller does not want to allow editing of items, at
     * which point we remove the "upload CSV file" button, and the
     * "delete all items" button.
     */
    if:x:(/../*/main-toolbar/*/edit-items|/@.defaults/*/main-toolbar/*/edit-items)/$?value.bool
      =:bool:false

      /*
       * Removing main toolbar.
       */
      set:x:/../*/return/*/div/*/widgets/0/*/widgets/*/*(/.edit-items)/.

    /*
     * Checking if caller does not want to allow downloading of items, at
     * which point we remove the "download CSV file" button.
     */
    if:x:(/../*/main-toolbar/*/download-items|/@.defaults/*/main-toolbar/*/download-items)/$?value.bool
      =:bool:false

      /*
       * Removing main toolbar.
       */
      set:x:/../*/return/*/div/*/widgets/0/*/widgets/*/*(/.download-items)/.

  /*
   * Returning our toolbar widget to caller.
   */
  eval-x:x:/+/**/.datagrid
  return
    div
      .toolbar
      widgets
        div
          class:strip right toolbar
          widgets


            /*
             * Download records as a CSV file button.
             */
            button
              innerValue:@"<span class=""icon-download2""></span>"
              title:Download items as CSV file
              .download-items
              events


                /*
                 * Handled to make sure we enable/disable button if there
                 * are no items in current filter.
                 */
                camphora.datagrid.databound

                  /*
                   * Checking if there actually are any items in datagrid,
                   * and acting accordingly.
                   */
                  if:x:/../*/count?value.long
                    =:long:0

                    /*
                     * No items, disabling button.
                     */
                    set-widget-property:x:/../*/_event?value
                      disabled

                  else

                    /*
                     * 1 or more items, enabling button.
                     */
                    delete-widget-property:x:/../*/_event?value
                      disabled

              onclick

                /*
                 * Invoking widget lambda event that is responsible for
                 * downloading the database as a CSV file.
                 */
                .datagrid:x:/../*/datagrid?value
                camphora.download-items:x:/-?value


            /*
             * Upload CSV file button.
             */
            micro.widgets.upload-button
              title:Import a CSV file from your local disc
              accept:.csv
              .edit-items
              .onupload

                /*
                 * Invoking widget lambda event that is responsible for
                 * importing a CSV file into our database.
                 */
                .datagrid:x:/../*/datagrid?value
                eval-x:x:/+/*
                camphora.database.import-csv-file:x:/-2?value
                  datagrid:x:/@.datagrid?value
                  file:x:/../*/files/*/physical-file?value

                /*
                 * Finding filter textbox and setting its [innerValue] to empty string.
                 */
                p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                  .toolbar
                p5.web.widgets.find-first:x:/-/*/*?value
                  .filter
                set-widget-property:x:/-/*/*?value
                  value:

                /*
                 * Setting focus to search textbox, to make it simpler to start
                 * filtering records, immediately after import.
                 */
                micro.page.set-focus:x:/@p5.web.widgets.find-first/*/*?value


            a
              role:button
              class:button
              innerValue:@"<span class=""icon-home3""></span>"
              title:Return to home
              href:/


        /*
         * Pager toolbar, containing paging buttons and
         * filter textbox and button.
         */
        div
          class:strip right
          widgets


            /*
             * Add new record button.
             */
            button
              innerValue:@"<span class=""icon-plus""></span>"
              class:large
              title:Create new record
              onclick

                /*
                 * Invoking widget lambda event that is responsible for
                 * creating a new item.
                 */
                .datagrid:x:/../*/datagrid?value
                camphora.create-new-item:x:/-?value


            /*
             * Search textbox.
             */
            input:camphora-search-query
              type:text
              placeholder:Search ...
              .filter
              onkeydown:@"if (event.keyCode == 13) {p5.$('camphora-search-button').raise('onclick');return false;}"
              events


                /*
                 * Active Event sink invoked when for some reasons the filter textbox
                 * should get focus.
                 */
                camphora.toolbar._set-focus-to-filter-textbox

                  /*
                   * Checking that this is our guy.
                   */
                  .datagrid:x:/../*/datagrid?value
                  if:x:/../*/_arg?value
                    !=:x:/@.datagrid?value
                    return
                  micro.page.set-focus:x:/../*/_event?value

              oninit

                /*
                 * Setting initial focus to search textbox.
                 */
                micro.page.set-focus:x:/../*/_event?value


            /*
             * Search button.
             */
            button:camphora-search-button
              innerValue:@"<span class=""icon-search""></span>"
              title:Search for items
              onclick

                /*
                 * Retrieving search query.
                 */
                get-widget-property:camphora-search-query
                  value

                /*
                 * Re-databinding datagrid, now with a search filter condition.
                 */
                .datagrid:x:/../*/datagrid?value
                eval-x:x:/+/*
                camphora.datagrid.search:x:/@.datagrid?value
                  filter:x:/@get-widget-property/*/*?value

                /*
                 * Setting focus to search button.
                 */
                micro.page.set-focus:camphora-search-query


            /*
             * Page to previous page button.
             */
            button
              innerValue:@"<span class=""icon-arrow-left""></span>"
              title:Previous page
              events


                /*
                 * Invoked when the [_arg]Â datagrid has been databound.
                 *
                 * Will be given [page] and [more-pages], indicating the current page,
                 * and whether or not there are more pages in the dataset currently
                 * active in the datagrid.
                 */
                camphora.datagrid.databound

                  /*
                   * Verifying that this invocation is for the current datagrid.
                   */
                  .datagrid:x:/../*/datagrid?value
                  if:x:/-?value
                    !=:x:/../*/_arg?value
                    return

                  /*
                   * Setting button's disabled property according to [_arg]
                   * value supplied by caller.
                   */
                  if:x:/../*/page?value
                    =:long:0

                    /*
                     * There are no more previous pages in datagrid.
                     */
                    set-widget-property:x:/../*/_event?value
                      disabled

                  else

                    /*
                     * There exists previous pages in datagrid.
                     */
                    delete-widget-property:x:/../*/_event?value
                      disabled


              onclick

                /*
                 * Paging to previous page.
                 */
                .datagrid:x:/../*/datagrid?value
                camphora.datagrid.page.previous:x:/-?value


            /*
             * Page to next page button.
             */
            button:camphora-next-button
              innerValue:@"<span class=""icon-arrow-right""></span>"
              title:Next page
              events


                /*
                 * Invoked when the datagrid has been databound.
                 *
                 * Will be given [page] and [more-pages], indicating the current page,
                 * and whether or not there are more pages in the dataset currently
                 * active in the datagrid.
                 */
                camphora.datagrid.databound

                  /*
                   * Verifying that this invocation is for the current datagrid.
                   */
                  .datagrid:x:/../*/datagrid?value
                  if:x:/-?value
                    !=:x:/../*/_arg?value
                    return

                  /*
                   * Setting button's disabled property according to [_arg]
                   * value supplied by caller.
                   */
                  if:x:/../*/more-pages?value
                    =:bool:false

                    /*
                     * There are no more previous pages in datagrid.
                     */
                    set-widget-property:x:/../*/_event?value
                      disabled

                  else

                    /*
                     * There exists previous pages in datagrid.
                     */
                    delete-widget-property:x:/../*/_event?value
                      disabled


              onclick

                /*
                 * Paging to next page.
                 */
                .datagrid:x:/../*/datagrid?value
                camphora.datagrid.databind.next:x:/-?value
