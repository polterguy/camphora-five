/*
 * This is a _"template file"_, implying this file will be copied into
 * your Camphora Five generated app's folder when your app is generated,
 * and possibly modified to reflect your app's name/structure.
 *
 * File responsible for exporting items to the client as a CSV file
 * for the specified __[datagrid]__ datagrid.
 */





/*
 * Sanity checking invocation.
 */
micro.lambda.contract.min:x:/..
  datagrid:string





/*
 * Checking if there already exists an existing temp CSV file in user's temp folder,
 * and deleting it if it exists.
 */
if
  fetch:x:/0/0?value
    file-exists:~/temp/{0}.csv
      :{app-name}
  delete-file:~/temp/{0}.csv
    :{app-name}





/*
 * Contains all [field] arguments from app manifest file.
 */
.fields





/*
 * Iterating through each [field] declaration from above [.fields] node.
 */
.cols
for-each:x:/@.fields/*/field

  /*
   * Adding column to SQL.
   */
  set:x:/@.cols?value
    src:{0},`{1}`
      :x:/@.cols?value
      :x:/@_dp/#/*/name?value





/*
 * Trimming away redundant "," on columns declaration.
 */
set:x:/@.cols?value
  trim:x:/@.cols?value
    chars:,





/*
 * Dynamically building SQL according to filter condition.
 */
.sql
camphora.datagrid.filter:x:/../*/datagrid?value
if:x:/@camphora.{0}.datagrid.filter/*
  :{app-name}

  /*
   * Filter exists, making sure we only export filtered items.
   */
  set:x:/@.sql?value
    src:select {0} from `{1}` where {2}
      :x:/@.cols?value
      :{app-name}
      :x:/@camphora.{0}.datagrid.filter/0?value
        :{app-name}
  add:x:/../*/p5.mysql.connect/*/p5.mysql.select
    src:x:/@camphora.{0}.datagrid.filter/0/*
      :{app-name}

else

  /*
   * No filter.
   */
  set:x:/@.sql?value
    src:select {0} from `{1}`
      :x:/@.cols?value
      :{app-name}





/*
 * Selecting all records from database, and creating a CSV file out of them.
 */
p5.mysql.connect:[camphora]

  /*
   * Runninq query.
   */
  p5.mysql.select:x:/@.sql?value

  /*
   * Creating CSV content out of query's result.
   */
  lambda2csv:x:/@p5.mysql.select/*

  /*
   * Saving CSV content to file in user's "/temp/" folder.
   */
  save-file:~/temp/{0}.csv
    :{app-name}
    src:x:/@lambda2csv?value





/*
 * Re-directing client to download link.
 */
micro.download.file:~/temp/{0}.csv
  :{app-name}
