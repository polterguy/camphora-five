
/*
 * File responsible for creating a new CRUD item.
 */





/*
 * Figuring out path of app's "/helpers/" folder.
 */
split:x:/..?name
  =:/
set:x:/@split/0/-
join:x:/@split/*?name
  sep:/





/*
 * Loading app declaration file.
 */
load-file:/{0}/app.hl
  :x:/@join?value





/*
 * Figuring out which data to ask user by, by creating an associated widget for
 * each [field] in "app.hl" file.
 *
 * Notice, we do some "expression magic" here, to make sure all textbox fields are
 * added first, then textarea fields, then select fields, then radio field, before 
 * finally all other types of fields (only checkbox type left at that point though).
 */
_first:bool:true
for-each:x:/@load-file/*/*/field(/*/type/=text/.|/type/=/textarea/.|/type/=select/.|/type/=/radio/.|/*/.)

  /*
   * Figuring out type of field, and creating an associated widget accordingly.
   */
  switch:x:/@_dp/#/*/type?value

    /*
     * Single line textbox type of data.
     */
    case:text

      /*
       * Checking if this is our first iteration.
       */
      if:x:/@_first?value
        add:x:/..case/*/add/*/*/*/*/input
          src
            oninit
              micro.page.set-focus:x:/../*/_event?value
        set:x:/@_first?value
          src:bool:false

      /*
       * Adding widget to modal window.
       */
      eval-x:x:/+/*/*/*/*/*(/innerValue|/placeholder|/.data-field)
      add:x:/../*/create-widgets/**/div/*/widgets/=data
        src
          div
            class:strip fill
            widgets
              label
                innerValue:x:/@_dp/#/*/name?value
                class:capitalize
              input
                type:text
                placeholder:{0} ...
                  :x:/@_dp/#/*/name?value
                .data-field:x:/@_dp/#/*/name?value
                onkeydown:@"if (event.keyCode == 13) {p5.$('camphora-save-new-record-button').raise('onclick');return false;}"

    /*
     * Multi line textbox type of data.
     */
    case:textarea

      /*
       * Checking if this is our first iteration.
       */
      if:x:/@_first?value
        add:x:/..case/*/add/*/*
          src
            oninit
              micro.page.set-focus:x:/../*/_event?value
        set:x:/@_first?value
          src:bool:false

      /*
       * Adding widget to modal window.
       */
      eval-x:x:/+/*/*/*(/placeholder|/.data-field)
      add:x:/../*/create-widgets/**/div/*/widgets/=data
        src
          literal
            element:textarea
            class:fill
            rows:5
            placeholder:{0} ...
              :x:/@_dp/#/*/name?value
            .data-field:x:/@_dp/#/*/name?value

    /*
     * Select type of data.
     */
    case:select

      /*
       * Adding each option for select field.
       */
      for-each:x:/@_dp/#/*/type/*
        eval-x:x:/+/*/*/*/innerValue
        add:x:/..case/*/add/*/*/*/widgets/*/select/*/widgets
          src
            option
              innerValue:x:/@_dp/#?name

      /*
       * Now adding option element to modal widget.
       */
      eval-x:x:/+/*/*/*/*/*(/innerValue|/.data-field)
      add:x:/../*/create-widgets/**/div/*/widgets/=data
        src
          div
            class:strip fill
            widgets
              label
                innerValue:x:/@_dp/#/*/name?value
                class:capitalize
              select
                class:fill
                .data-field:x:/@_dp/#/*/name?value
                widgets

    /*
     * Checkbox type of data.
     */
    case:checkbox

      eval-x:x:/+/*/*/*/*/*(/innerValue|/.data-field)
      add:x:/../*/create-widgets/**/div/*/widgets/=data
        src
          div
            widgets
              input
                type:checkbox
                .data-field:x:/@_dp/#/*/name?value
              label
                innerValue:x:/@_dp/#/*/name?value
                class:capitalize

    /*
     * Radiobutton type of data.
     */
    case:radio

      /*
       * Adding each option for radiobutton field.
       */
      for-each:x:/@_dp/#/*/type/*
        eval-x:x:/+/*/*/*(/name|/.data-value|/innerValue)
        add:x:/..case/*/add/*/*/*/widgets
          src
            input
              type:radio
              name:x:/@for-each/@_dp/#/*/name?value
              .data-value:x:/@_dp/#?name
            label
              innerValue:x:/@_dp/#?name
              class:capitalize

      /*
       * Now adding option element to modal widget.
       */
      add:x:/../*/create-widgets/**/div/*/widgets/=data
        src
          div
            widgets





/*
 * Creating a modal widget, asking user to supply his data for his new record.
 */
eval-x:x:/+/**/_helper-folder
create-widgets
  micro.widgets.modal:camphora-new-item-modal
    widgets
      h3
        innerValue:Supply data for your item
      div
        widgets:data
      div
        class:right
        widgets
          div
            class:strip
            style:"display:inline-block;"
            widgets
              button:camphora-save-new-record-button
                innerValue:Save
                onclick

                  /*
                   * Forward evaluated above.
                   */
                  _helper-folder:x:/@join?value

                  /*
                   * Serializing form's data.
                   */
                  micro.form.serialize:camphora-new-item-modal

                  /*
                   * Figuring out table's name.
                   */
                  split:x:/@_helper-folder?value
                    =:/
                  eval-x:x:/+
                  _table:x:/@split/0/-2?name

                  /*
                   * Parametrizing SQL insert statement with column names, and SQL parameters.
                   */
                  _cols
                  _pars
                  _par-names
                  for-each:x:/@micro.form.serialize/*
                    set:x:/@_cols?value
                      src:{0},{1}
                        :x:/@_cols?value
                        :x:/@_dp/#?name
                    set:x:/@_par-names?value
                      src:{0},@{1}
                        :x:/@_par-names?value
                        :x:/@_dp/#?name
                    eval-x:x:/+2/*/*
                    set:x:/+/*/*?name
                      src:@{0}
                        :x:/@_dp/#?name
                    add:x:/@_pars
                      src
                        foo:x:/@_dp/#?value

                  /*
                   * Trimming away additional ",".
                   */
                  set:x:/@_cols?value
                    trim:x:/@_cols?value
                      chars:,
                  set:x:/@_par-names?value
                    trim:x:/@_par-names?value
                      chars:,

                  /*
                   * Adding all parameters into SQL insert statement.
                   */
                  add:x:/../*/p5.mysql.connect/*/p5.mysql.insert
                    src:x:/@_pars/*

                  /*
                   * Inserting into database.
                   */
                  p5.mysql.connect:[camphora]
                    p5.mysql.insert:@"insert into {0} ({1}) values ({2})"
                      :x:/@_table?value
                      :x:/@_cols?value
                      :x:/@_par-names?value

                  /*
                   * Deleting modal widget, and re-databinding datagrid.
                   */
                  delete-widget:camphora-new-item-modal
                  micro.evaluate.file:/{0}/databind-grid.hl
                    :x:/@_helper-folder?value

              button
                innerValue:Cancel
                onclick

                  /*
                   * Simply closing modal widget.
                   */
                  delete-widget:camphora-new-item-modal
