/*
 * File responsible for editing existing Camphora Five CRUD records.
 *
 * Expects a __[parent]__, being the ID of the widget where the editing widget should
 * be injected - In addition to __[id]__ being the record's database ID.
 *
 * Optionally pass in __[edit-items]__ to indicate whether or not it is possible
 * to edit and delete items in the datagrid, which is needed to add one addition
 * colspan to the editor widget.
 */





/*
 * Sanity checking argument.
 */
micro.lambda.contract.min:x:/..
  row-widget-id:string
  id:long





/*
 * How many visible columns we have in our table in total.
 */
.column-count





/*
 * We need to increment the [.column-count] by 1, to accommodate
 * for the "delete item" row.
 */
set:x:/@.column-count?value
  +:x:/@.column-count?value
    _:1





/*
 * Toggling editing row CSS class on row caller wants to edit.
 */
micro.css.toggle:x:/../*/row-widget-id?value
  class:camphora-row-is-edited





/*
 * Checking if item is already being edited.
 */
p5.web.widgets.find-first:camphora-datagrid
  .edit:x:/../*/id?value
if:x:/-/*/*?value

  /*
   * Editor for item is already open hence we close it,
   * to allow for "toggling" functionality on editors
   */
  delete-widget:x:/@p5.web.widgets.find-first/*/*?value
  return





/*
 * Selecting item from database.
 */
p5.mysql.connect:[camphora]

  /*
   * Selecting record from database.
   */
  p5.mysql.select:@"select * from `{0}` where id = @id"
    :{app-name}
    @id:x:/../*/id?value

  /*
   * Applying values to [create-widget] invocation below.
   */
  for-each:x:/@p5.mysql.select/*/*
    set:x:/../*/create-widget/**/={{0}}?value
      :x:/@_dp/#?name
      src:x:/@_dp/#?value





/*
 * Including "CR/LF" JavaScript to make sure we click "Save" button,
 * when user press the Return key in a textbox widget, and that we close editor
 * when user presses Esc key in a textbox.
 */
p5.web.include-javascript:@"function p5_camphora_edit_item_onkeydown(e) {
  if (e.keyCode == 13) {
    var el = event.target;
    while ((el = el.parentElement) && !el.classList.contains('camphora-edit-row'));
    p5.$(el.getElementsByClassName('large')[0]).raise('onclick');
    return false;
  } else if (e.keyCode == 27) {
    var el = event.target;
    while ((el = el.parentElement) && !el.classList.contains('camphora-edit-row'));
    p5.$(el).raise('.onclose');
    return false;
  }
}"





/*
 * Creating editing widget for record.
 */
eval-x:x:/+/**/.editor-row
create-widget
  after:x:/../*/row-widget-id?value
  element:tr
  .edit:x:/../*/id?value
  class:camphora-edit-row
  .onclose

    /*
     * Contains the ID of our editor row.
     */
    .editor-row:x:/../*/row-widget-id?value
    micro.css.toggle:x:/-?value
      class:camphora-row-is-edited

    /*
     * Deleting editor widget.
     */
    delete-widget:x:/../*/_event?value

  widgets
    td
      colspan:x:/@.column-count?value
      widgets
        div
          class:shaded rounded air-inner air-top air-bottom bg
          widgets
            div
              widgets:data
            div
              class:right strip
              widgets
                button
                  innerValue:@"<span class=""icon-floppy-disk""></span>"
                  title:Saves your data and closes editor
                  class:large camphora-save-button
                  onclick

                    /*
                     * Contains the name of our app.
                     */
                    .app-name:{app-name}

                    /*
                     * Contains the ID of our editor row.
                     */
                    .editor-row:x:/../*/row-widget-id?value
                    micro.css.toggle:x:/-?value
                      class:camphora-row-is-edited

                    /*
                     * Finding main editor widget for item, and serializing its
                     * form widgets.
                     */
                    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                      .edit
                    micro.form.serialize:x:/@p5.web.widgets.find-first-ancestor/*/*?value

                    /*
                     * Updating item in database.
                     */
                    add:x:/+
                      src:x:/@micro.form.serialize/*
                    camphora.database.update

                    /*
                     * Re-databinding datagrid.
                     */
                    camphora.datagrid.databind
