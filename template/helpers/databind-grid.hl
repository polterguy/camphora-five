
/*
 * File responsible for databinding the grid for a Camphora Five generated app.
 *
 * Optionally requires [filter] and [offset].
 */





/*
 * Sanity checking arguments.
 */
micro.lambda.contract.optional:x:/..
  filter:string
  offset:long





/*
 * Default values, used if no arguments are given.
 */
.defaults
  offset:long:0





/*
 * Figuring out path of app's "/helpers/" folder.
 */
split:x:/..?name
  =:/
set:x:/@split/0/-
join:x:/@split/*?name
  sep:/





/*
 * Loading app declaration file.
 */
load-file:/{0}/app.hl
  :x:/@join?value





/*
 * Creating our SQL, by figuring out which columns are supposed to be visible in
 * the datagrid.
 */
_cols
_where
for-each:x:/@load-file/*/*/field

  /*
   * Checking if field is supposed to be visible in grid.
   */
  if:x:/@_dp/#/*/show?value
    =:bool:false

    /*
     * Current field is not supposed to be visible in the datagrid.
     */
    continue

  /*
   * Adding column to SQL.
   */
  set:x:/@_cols?value
    src:{0},{1}
      :x:/@_cols?value
      :x:/@_dp/#/*/name?value

  /*
   * Checking if we have a [filter] condition.
   */
  if:x:/../*/filter?value

    /*
     * Filter was given, making sure we create our "where" condition.
     */
    if:x:/@_where?value

      /*
       * Adding "and" parts to SQL.
       */
      set:x:/@_where?value
        src:"{0} or "
          :x:/@_where?value

    else

      /*
       * Adding first parts of our "where" clause.
       */
      set:x:/@_where?value
        src:" where "

      /*
       * Making sure we pass in [@filter] to [p5.mysql.select]
       */
      add:x:/../*/p5.mysql.connect/*/p5.mysql.select
        src
          @filter:"%{0}%"
            :x:/../*/filter?value

    /*
     * Adding up "where" for currently iterated column.
     */
    set:x:/@_where?value
      src:@"{0} like @filter"
        :x:/@_dp/#/*/name?value





/*
 * Trimming away redundant ",".
 */
set:x:/@_cols?value
  trim:x:/@_cols?value
    chars:,





/*
 * Opening database connection, and executing our SQL query.
 */
p5.mysql.connect:[camphora]
  p5.mysql.select:@"select id, {0} from {1}{2} order by id limit 10 offset @offset"
    :x:/@_cols?value
    :x:/@split/0/-2?name
    :x:/@_where?value
    @offset:x:(/../*/offset|/../*/.defaults/*/offset)/$?value

  /*
   * Looping through above results, and creating a row in grid for each row in database.
   */
  eval-x:x:/+/**/_table-name
  for-each:x:/@p5.mysql.select/*

    /*
     * First adding [item] to databind invocation.
     */
    add:x:/../*/micro.widgets.grid.databind
      src:item

    /*
     * Then looping through each cell, making sure we HTML encode it before we
     * append it's value into currently iterated [item].
     */
    for-each:x:/@_dp/#/*(!/id)

      /*
       * HTML encoding value, to eliminate risk of SQL injection attacks.
       */
      p5.html.html-encode:x:/@_dp/#?value

      /*
       * Adding item to grid's databind invocation.
       */
      eval-x:x:/+2/*/*
      set:x:/+/*/*?name
        src:x:/@_dp/#?name
      add:x:/../*/micro.widgets.grid.databind/0/-
        src
          foo:x:/@p5.html.html-encode?value

    /*
     * Adding "delete button" to grid, in addition to meta info for row.
     */
    eval-x:x:/+/*/*/*/.id
    add:x:/../*/micro.widgets.grid.databind/0/-
      src
        .row
          .id:x:/@_dp/#/*/id?value
        Delete
          widgets
            button
              innerValue:@"<span class=""icon-trash""></span>"
              style:"margin-bottom:0;padding-left:25px;padding-right:25px;"
              onclick

                /*
                 * Deleting row.
                 */
                _table-name:x:/../*/split/[0,1]/0/-2?name
                p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                  .id
                get-widget-property:x:/-/*/*?value
                  .id
                p5.mysql.connect:[camphora]
                  p5.mysql.delete:@"delete from {0} where id = @id"
                    :x:/@_table-name?value
                    @id:x:/@get-widget-property/*/*?value

                /*
                 * Re-databinding grid.
                 */
                micro.evaluate.file:/modules/{0}/helpers/databind-grid.hl
                  :x:/@_table-name?value

                /*
                 * Giving user visual feedback.
                 */
                micro.windows.info:Record was deleted
                  class:micro-windows-info success





/*
 * Databinding grid.
 */
micro.widgets.grid.databind:camphora-crud-grid
