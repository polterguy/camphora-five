
/*
 * Converts the given [_arg] HTML snippet's URLs and tags into hyperlinks, 
 * and returns the result to the caller.
 *
 * Notice, the path used to generate #hash-tags here is dynamically created.
 */





/*
 * Creating our event.
 */
create-event:camphora._internals.html.create-hyperlinks-and-tags

  /*
   * Sanity checking invocation.
   */
  micro.lambda.contract.min:x:/..
    _arg:string

  /*
   * Replacing all "#xxx" occurrencies in content, into a relative URL, leading
   * to "/tag/xxx"
   */
  p5.web.get-location
  split:x:/-?value
    =:/
  replace:x:/../*/_arg?value
    src:regex:@"/(\B)(#(\w[-\w]+))/i"
    dest:@"$1<a href=""/{0}/tag/$3"">$2</a>"
      :x:/@split/0/-?name

  /*
   * Using regular expression to convert anything that resembles a hyperlink, that
   * has not already been converted somehow, into an actual clickable hyperlink, making
   * sure we append a "target" attribute, leading to "_blank".
   *
   * In addition, we also add a rel="noreferrer" to all links, to prevent any visited
   * websites, to know the origin of the request.
   */
  replace:x:/@replace?value
    src:regex:@"/(\(|<|\[|\s|>)+(http|https|ftp)(\://)([a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3})((:[a-zA-Z0-9]*)?/?([a-zA-Z0-9\-\._\?\,\'/\\\+&amp;%\$#\=~])*)/"
    dest:@"$1<a rel=""noreferrer"" target=""_blank"" href=""$2$3$4$5""><strong>$4</strong>$5</a>"

  /*
   * Returning the results of the above regular expression replacement.
   */
  return:x:/@replace?value
