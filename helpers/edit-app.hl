/*
 * File responsible for editing and creating new Camphora Five apps.
 *
 * Optionally takes a __[filename]__ argument, for editing existing app, instead of
 * creating a new app.
 */





/*
 * Sanity check.
 */
micro.lambda.contract.optional:x:/..
  filename:string





/*
 * Checking if user is editing another app from before.
 */
p5.web.widgets.find
  .data
if:x:/-/*/*?value

  /*
   * User can only edit one app at the time.
   */
  micro.windows.info:Please finish editing your other app
    class:micro-windows-info warning
  return





/*
 * Default values.
 */
.defaults
  name:new-app
  filename





/*
 * Used to hold attributes of app retrieved from app-declaration file, if any.
 */
.file-values
  desktop-icon





/*
 * Modifying defaults, and massaging our view, if a [filename] argument was supplied.
 */
if:x:/../*/filename?value

  /*
   * We're in "edit modus", hence we change the [.defaults] segment to contain
   * data from our actual file.
   */
  split:x:/../*/filename?value
    =:/
    =:.
  set:x:/@.defaults/*/name?value
    src:x:/@split/0/-2?name
  set:x:/@.defaults/*/filename?value
    src:x:/../*/filename?value

  /*
   * Loading file, and making sure initial state of widget reflects file's actual
   * declaration.
   */
  load-file:x:/../*/filename?value

  /*
   * Applying settings for later references.
   */
  set:x:/@.file-values/*/desktop-icon?value
    src:x:/@load-file/*/*/desktop-icon?value

  /*
   * Looping through each [field] from file, and creating a wrapper widget for it.
   */
  for-each:x:/@load-file/*/*/field

    /*
     * Adding a widget into fields wrapper widget, reflecting currently iterated field declaration.
     */
    join:x:/@_dp/#/*/type/*?name
      sep:", "
    eval-x:x:/+/*/*/*
    add:x:/../*/create-widget/**/div/*/.fields/./*/widgets
      src
        camphora.widgets._internals.field-definition
          name:x:/@_dp/#/*/name?value
          type:x:/@_dp/#/*/type?value
          options:x:/@join?value
          show:x:/@_dp/#/*/show?value

  /*
   * Looping through each [view] from file, and creating an editor wrapper for its Hyperlambda.
   */
  for-each:x:/@load-file/*/*/views/*

    /*
     * Adding a CodeMirror widget for currently iterated view.
     */
    eval-x:x:/+/*/*/*
    add:x:/../*/create-widget/**/div/*/.views/./*/widgets
      src
        camphora.widgets._internals.view-definition
          name:x:/@_dp/#?name
          value:x:/@_dp/#?value

else

  /*
   * "New app modus".
   */
  whoami
  set:x:/@.defaults/*/filename?value
    src:/users/{0}/documents/private/camphora/{1}.hl
      :x:/@whoami/*/username?value
      :x:/@.defaults/*/name?value
  set:x:/@.file-values/*/desktop-icon?value
    src:bool:true





/*
 * Creating main wire frame for editing app.
 */
eval-x:x:/+/*/.filename|/+/**/micro.widgets.wizard-form/*/*/value|/+/**(/.file-values/*)
create-widget
  parent:camphora-main-container
  class:row air-top
  .filename:x:/@.defaults/*/filename?value
  events

    /*
     * Invoked when an app is deleted.
     *
     * We're checking if the deleted app, is the currently edited one, and if so,
     * we delete its main edit widget.
     */
    camphora.delete-app

      /*
       * Sanity check.
       */
      micro.lambda.contract.min:x:/..
        _arg:string

      /*
       * Checking if this is our guy, at which point we delete widget entirely.
       */
      get-widget-property:x:/../*/_event?value
        .filename
      if:x:/@get-widget-property/*/*?value
        =:x:/../*/_arg?value

        /*
         * Our guy, making sure we delete widget, to not have it "dangling".
         */
        delete-widget:x:/../*/_event?value

  widgets
    div
      class:col
      .data
      widgets
        div
          class:shaded rounded air-inner
          widgets
            div
              class:strip right
              widgets
                button
                  innerValue:@"<span class=""icon-floppy-disk""></span>"
                  title:Save your app declaration, keyboard shortcut S
                  class:large
                  .save-button
                  accesskey:S
                  onclick

                    /*
                     * Invoking event responsible for saving app.
                     */
                    camphora.save-app:x:/../*/_event?value

                  events

                    /*
                     * Event responsible for saving our app.
                     */
                    camphora.save-app

                      /*
                       * Evaluating main file responsible for actually saving our app,
                       * and doing the heavy lifting.
                       */
                      add:x:/+
                        src:x:/../*/_event
                      micro.evaluate.file:@CAMPHORA/helpers/save-app.hl
                      return:x:/-?value

                button
                  innerValue:@"<span class=""icon-power-cord""></span>"
                  title:Generates your app, keyboard shortcut G
                  accesskey:G
                  onclick

                    /*
                     * Evaluating file responsible for asking user to confirm generating app.
                     */
                    add:x:/+
                      src:x:/../*/_event
                    micro.evaluate.file:@CAMPHORA/helpers/confirm-generate-app.hl

                button
                  innerValue:@"<span class=""icon-cross""></span>"
                  title:Close editor for app
                  onclick

                    /*
                     * Finding main "editing" widget, and deleting it.
                     */
                    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                      .filename
                    delete-widget:x:/-/*/*?value

            h3
              innerValue:General information
            br
              class:clearfix
            micro.widgets.wizard-form
              collection
                class:row
                widgets

                  /*
                   * Name of app.
                   */
                  collection
                    class:col-40
                    widgets
                      text
                        info:Name
                        .data-field:name
                        value:x:/@.defaults/*/name?value
                        title:Name of your app. Notice, this also declares the name of your database table.
                        oninit

                          /*
                           * Setting initial focus to name textbox.
                           */
                          micro.page.set-focus:x:/../*/_event?value

                        onchange

                          /*
                           * Sanity checking new name of app.
                           */
                          get-widget-property:x:/../*/_event?value
                            value
                          match:x:/@get-widget-property/*/*?value
                            src:regex:"/^[-_a-z0-9]{3,20}$/"
                          if:x:/@match/*?count
                            =:int:0
                            or:x:/@match/0?name
                              =:

                            /*
                             * Not an acceptable name of app.
                             */
                            micro.windows.info:Not an acceptable name. Use only a-z, A-Z, 0-1, '_' and/or '-' in your app's name, and between 3 and 20 characters
                              class:micro-windows-info warning
                            micro.page.set-focus:x:/../*/_event?value

                  /*
                   * Create desktop icon checkbox.
                   */
                  div
                    class:col
                    widgets

                      /*
                       * Desktop icon checkbox.
                       */
                      label
                        title:If a desktop icon should be created for your app or not. Notice, if you don't create a desktop icon, you'll have to manually navigate to your app, by remembering its URL/name.
                        widgets
                          input:camphora-desktop-icon
                            type:checkbox
                            .data-field:desktop-icon
                            oninit

                              /*
                               * Forward evaluated before creation of widget.
                               */
                              .file-values
                                desktop-icon:x:/../*/.file-values/*/desktop-icon?value
                              if:x:/@.file-values/*/desktop-icon?value

                                /*
                                 * Widget should be initially checked.
                                 */
                                set-widget-property:x:/../*/_event?value
                                  checked
                          span
                            innerValue:Desktop icon

        div
          class:shaded rounded air-inner
          widgets
            div
              class:strip right
              widgets
                button
                  innerValue:@"<span class=""icon-plus""></span>"
                  class:large
                  title:Adds another field to your CRUD app
                  onclick

                    /*
                     * Adding a new field into form.
                     */
                    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                      .filename
                    p5.web.widgets.find-first:x:/@p5.web.widgets.find-first-ancestor/*/*?value
                      .fields

                    /*
                     * Creating widget wrapping field definition.
                     */
                    eval-x:x:/+/*/*
                    create-widgets
                      camphora.widgets._internals.field-definition
                        parent:x:/@p5.web.widgets.find-first/*/*?value
            h3
              innerValue:Fields
            br
              class:clearfix
            div
              .fields
              widgets

        div
          class:shaded rounded air-inner
          widgets
            div
              class:strip right
              widgets
                button
                  innerValue:@"<span class=""icon-eye-plus""></span>"
                  class:large
                  title:Adds another view to your CRUD app
                  onclick

                    /*
                     * Figuring out what "template views" user can select from.
                     */
                    list-files:@CAMPHORA/helpers/view-templates/
                      filter:.hl

                    /*
                     * In case we didn't find one single view that were legal to add to the
                     * current app, according to its [.condition], this value will be false
                     * after having iterated through all of our template views - At which
                     * point we do not show the modal widget at all, but rather warns user
                     * that no legal views were found.
                     */
                    .found-view:bool:false
                    for-each:x:/@list-files/*?name

                      /*
                       * Loading file and checking if it has a [.configure]/[.condition] section, at
                       * which point we evaluate the [.condition], and avoid adding the file the file,
                       * if its [.condition] evaluated to boolean "false".
                       */
                      load-file:x:/@_dp?value
                      if:x:/@load-file/*/*/.configure/*/.condition

                        /*
                         * File contains a [.configure]/[.condition] section, evaluating it,
                         * and verifying it evaluates to boolean "true" before we continue.
                         */
                        eval:x:/@load-file/*/*/.configure/*/.condition
                        if:x:/-?value
                          =:bool:false

                          /*
                           * This view is not valid for this app, for some reasons.
                           */
                          continue

                      /*
                       * We have found a view that can be added to the application.
                       */
                      set:x:/@.found-view?value
                        src:bool:true

                      /*
                       * Figuring out filename for our currently iterated template.
                       */
                      split:x:/@_dp?value
                        =:/
                        =:.
                      eval-x:x:/+/*/*/*
                      add:x:/../*/create-widgets/**/widgets/*/select/[0,1]/*/widgets
                        src
                          option
                            innerValue:x:/@split/0/-2?name

                    /*
                     * Verifying we found at least one valid view before we proceed.
                     */
                    if:x:/@.found-view?value
                      =:bool:false
                      micro.windows.info:We found no views that can be added to this application
                        class:micro-windows-info warning
                      return

                    /*
                     * Displays a modal widget, asking user what "template view"
                     * he wants to start out from.
                     */
                    create-widgets
                      micro.widgets.modal:camphora-select-template-view
                        widgets
                          h3
                            innerValue:Create new view

                          div
                            class:strip fill
                            widgets
                              label
                                class:description-9
                                innerValue:Template
                              select:camphora-select-view
                                widgets
                                oninit

                                  /*
                                   * Invoking event responsible for parsing the [.configure]
                                   * section for the view, and creating one widget for each
                                   * section, allowing user to configure his view.
                                   */
                                  get-widget-property:x:/../*/_event?value
                                    value
                                  camphora._populate-properties-for-view-selector:x:/@get-widget-property/*/*?value

                                onchange

                                  /*
                                   * Invoking event responsible for parsing the [.configure]
                                   * section for the view, and creating one widget for each
                                   * section, allowing user to configure his view.
                                   */
                                  get-widget-property:x:/../*/_event?value
                                    value
                                  camphora._populate-properties-for-view-selector:x:/@get-widget-property/*/*?value

                          div
                            class:strip fill
                            widgets
                              label
                                class:description-9
                                innerValue:Name
                              input:camphora-view-name
                                type:text
                                placeholder:Name of your view ...
                                onkeydown:@"if (event.keyCode == 13) {p5.$('camphora-create-view-button').raise('onclick');return false;}"

                          /*
                           * Wrapper for the custom properties for our view.
                           */
                          container:camphora-view-properties
                            events

                              /*
                               * Figures out the view's [.configure] section, and creates
                               * a widget for each property in it.
                               */
                              camphora._populate-properties-for-view-selector

                                /*
                                 * Clearing old widgets out of property section.
                                 */
                                clear-widget:camphora-view-properties

                                /*
                                 * Setting the default "view name" value to the name of our view.
                                 */
                                set-widget-property:camphora-view-name
                                  value:x:/../*/_arg?value

                                /*
                                 * Making sure the "view name" textbox gets initial focus.
                                 */
                                micro.page.set-focus:camphora-view-name

                                /*
                                 * Loading up view and parsing its [.configure] section.
                                 */
                                load-file:@CAMPHORA/helpers/view-templates/{0}.hl
                                  :x:/../*/_arg?value

                                /*
                                 * Checking if view has a [.configure] section.
                                 */
                                if:x:/@load-file/*/*/.configure

                                  /*
                                   * Creating a br widget to separate arguments to view
                                   * from the core properties.
                                   */
                                  create-void-widget
                                    parent:camphora-view-properties
                                    element:hr

                                  /*
                                   * Checking if [.configure] section as an [image] section.
                                   */
                                  if:x:/@load-file/*/*/.configure/*/image

                                    /*
                                     * Creating an image widget, which we associate with the description.
                                     */
                                    create-widget
                                      parent:camphora-view-properties
                                      element:img
                                      style:"float:right; margin-left: .5rem; max-width: 33%;border-radius:.5rem; box-shadow: 3px 3px 5px rgba(0,0,0,.2);"
                                      alt:Example of how view might look like
                                      src:x:/@load-file/*/*/.configure/*/image?value
                                      events

                                        /*
                                         * Invoked by some views when the screenshot should be changed.
                                         */
                                        camphora._set-view-screenshot
                                          set-widget-property:x:/../*/_event?value
                                            src:x:/../*/_arg?value

                                  /*
                                   * Checking if [.configure] section as a [.description] section.
                                   */
                                  if:x:/@load-file/*/*/.configure/*/.description

                                    /*
                                     * Making sure we display description for view.
                                     */
                                    micro.markdown.markdown2html:x:/@load-file/*/*/.configure/*/.description?value
                                    create-widget
                                      parent:camphora-view-properties
                                      element:div
                                      innerValue:x:/@micro.markdown.markdown2html?value

                                  /*
                                   * View needs to be configured somehow.
                                   *
                                   * First checking if view is associated with one
                                   * or more fields somehow.
                                   */
                                  if:x:/@load-file/*/*/.configure/*/field

                                    /*
                                     * View has at least one [field] type of configuration.
                                     *
                                     * Figuring out available fields.
                                     */
                                    p5.web.widgets.find-first
                                      .fields
                                    micro.form.serialize:x:/-/*/*?value

                                    /*
                                     * Iterating through each [field] type of configuration.
                                     */
                                    for-each:x:/@load-file/*/*/.configure/*/field

                                      /*
                                       * Creating a select list, to allow user to select a field
                                       * to associate his view with.
                                       */
                                      for-each:x:/@micro.form.serialize/*/field-name

                                        /*
                                         * Checking if currently iterated field has declared what
                                         * types of fields it can be legally added to, and if it has,
                                         * we verify that currently iterated field is amongst those
                                         * types.
                                         */
                                        if:x:/..for-each/@_dp/#/*

                                          /*
                                           * Field has a type restriction, making sure currently iterated
                                           * field is amongst one of these types.
                                           */
                                          if:x:/..for-each/@_dp/#/*/{0}
                                            :x:/@_dp/#/+2?value
                                            not

                                            /*
                                             * Currently iterated field is not amongst field type's
                                             * list of valid fields.
                                             */
                                            continue

                                        /*
                                         * Adding field to select list allowing user to select this field
                                         * for the currently iterated configuration setting.
                                         */
                                        eval-x:x:/+/*/*/*
                                        add:x:/..for-each/..for-each/*/create-widget/*/widgets/*/select/*/widgets
                                          src
                                            option
                                              innerValue:x:/@_dp/#?value

                                      /*
                                       * Checking if there is only one valid [field] for currently
                                       * iterated configuration setting, at which point we disable
                                       * the select widget.
                                       */
                                      if:x:/..for-each/*/create-widget/*/widgets/*/select/*/widgets/*?count
                                        =:int:1

                                        /*
                                         * Nothing to actually select for user, hence disabling
                                         * the select widget
                                         */
                                        add:x:/..for-each/*/create-widget/*/widgets/*/select
                                          src:disabled

                                      /*
                                       * Creating select widget to associate with variable.
                                       */
                                      create-widget
                                        class:strip fill
                                        parent:camphora-view-properties
                                        widgets
                                          label
                                            class:description-9
                                            innerValue:x:/@_dp/#?value
                                          select
                                            .data-field:x:/@_dp/#?value
                                            widgets

                                  /*
                                   * Iterating through each [text] type of configuration.
                                   */
                                  for-each:x:/@load-file/*/*/.configure/*/text

                                    /*
                                     * Creating widget wrapping [text] type of configuration setting.
                                     */
                                    create-widget
                                      parent:camphora-view-properties
                                      widgets
                                        div
                                          class:strip fill
                                          widgets
                                            label
                                              class:description-9
                                              innerValue:x:/@_dp/#?value
                                            input
                                              type:text
                                              placeholder:{0} ...
                                                :x:/@_dp/#?value
                                              value:x:/@_dp/#?value
                                              .data-field:x:/@_dp/#?value
                                              onkeydown:@"if (event.keyCode == 13) {p5.$('camphora-create-view-button').raise('onclick');return false;}"

                                  /*
                                   * Iterating through each [radio] type of configuration.
                                   */
                                  for-each:x:/@load-file/*/*/.configure/*/radio

                                    /*
                                     * Iterating through each [option] in currently iterated [radio].
                                     */
                                    .first:bool:true
                                    for-each:x:/@_dp/#/*/option

                                      /*
                                       * Checking if this is our first iteration, at which point
                                       * we make sure the radio button is checked by default.
                                       */
                                      if:x:/@.first?value
                                        =:bool:true
                                        set:x:/@.first?value
                                          src:bool:false
                                        add:x:/..for-each/*/add/*/*/*/*/input
                                          src:checked

                                      /*
                                       * Creating radio button wrapping currently iterated option.
                                       */
                                      add:x:/+2/*/*/*/*/input
                                        src:x:/@_dp/#/*
                                      eval-x:x:/+/*/*/*/*/*
                                      add:x:/..for-each/..for-each/*/create-widget/*/widgets
                                        src
                                          label
                                            widgets
                                              input
                                                type:radio
                                                name:x:/..for-each/@_dp/#?value
                                                .data-field:x:/..for-each/@_dp/#?value
                                                .data-value:x:/@_dp/#?value
                                              span
                                                innerValue:x:/@_dp/#?value

                                    /*
                                     * Creating widget wrapping all radio buttons.
                                     */
                                    create-widget
                                      parent:camphora-view-properties
                                      widgets

                                  /*
                                   * Iterating through each [markdown] type of configuration.
                                   */
                                  for-each:x:/@load-file/*/*/.configure/*/markdown

                                    /*
                                     * Creating widget wrapping [markdown] type of configuration setting.
                                     */
                                    eval-x:x:/+/*/*/*(/innerValue|/.data-field)
                                    create-widget
                                      parent:camphora-view-properties
                                      widgets
                                        label
                                          innerValue:x:/@_dp/#?value
                                        micro.widgets.codemirror
                                          mode:markdown
                                          .data-field:x:/@_dp/#?value

                          div
                            class:strip right
                            widgets
                              button:camphora-create-view-button
                                innerValue:OK
                                title:Creates your view and associates it with your app.
                                onclick

                                  /*
                                   * Finds our "view wrapper", and adds another CodeMirror wrapper
                                   * for the view's content, and a textbox wrapper for the view's name,
                                   * making sure we parametrize the view according to the configuration
                                   * settings the user supplied.
                                   */
                                  get-widget-property:camphora-select-view
                                    value
                                  get-widget-property:camphora-view-name
                                    value
                                  p5.web.widgets.find-first
                                    .views
                                  micro.form.serialize:x:/-/*/*?value

                                  /*
                                   * Sanity checking view name.
                                   *
                                   * First checking that there does not exist a view with the same name
                                   * from before.
                                   */
                                  if:x:/@micro.form.serialize/*/view-name/={0}
                                    :x:/@get-widget-property/*/*?value

                                    /*
                                     * There exists a view with the same name from before.
                                     */
                                    micro.windows.info:Your view's name must be unique
                                      class:micro-windows-info warning
                                    micro.page.set-focus:camphora-view-name
                                    return

                                  /*
                                   * Then checking that view's name does not contain illegal
                                   * characters. Notice, we only allowfor a-z, 0-1, '_' and '-'
                                   * here - And its name must be between 3 and 30 characters long.
                                   */
                                  match:x:/../*/get-widget-property/[1,2]/*/*?value
                                    src:regex:"/^[-_a-z0-9]{3,30}$/"
                                  if:x:/@match/*?count
                                    =:int:0
                                    or:x:/@match/0?value
                                      =:

                                    /*
                                     * Not a good name for the view.
                                     */
                                    micro.windows.info:Your view's name can only contain a-z, 0-9, '-' and '_' - And its length must be between 3 and 30 characters
                                      class:micro-windows-info warning
                                    micro.page.set-focus:camphora-view-name
                                    return

                                  /*
                                   * Notice, we remove the [.configure] lambda, and its associated
                                   * comment, if any.
                                   */
                                  load-file:@CAMPHORA/helpers/view-templates/{0}.hl
                                    :x:/../*/get-widget-property/[0,1]/*/*?value
                                    convert:false
                                  hyper2lambda:x:/@load-file/*?value
                                    keep-comments:true
                                  set:x:/@hyper2lambda/*/.configure/-/\..comment
                                  set:x:/@hyper2lambda/*/.configure

                                  /*
                                   * Checking if we have any [.configure] sections that user
                                   * has supplied for us.
                                   */
                                  micro.form.serialize:camphora-view-properties
                                  for-each:x:/@micro.form.serialize/*

                                    /*
                                     * View should be associated with a [field], making the
                                     * substitution before we transform our lambda back to
                                     * Hyperlambda and create our view wrapper.
                                     */
                                    set:x:/@hyper2lambda/**/={{0}}?value
                                      :x:/@_dp/#?name
                                      src:x:/@_dp/#?value

                                  lambda2hyper:x:/@hyper2lambda/*
                                    comments:unroll

                                  /*
                                   * Invoking event responsible for creating our view wrapper.
                                   */
                                  create-widgets
                                    camphora.widgets._internals.view-definition
                                      parent:x:/@p5.web.widgets.find-first/*/*?value
                                      name:x:/../*/get-widget-property/[1,2]/*/*?value
                                      value:x:/@lambda2hyper?value

                                  /*
                                   * Deleting modal widget.
                                   */
                                  delete-widget:camphora-select-template-view

                                  /*
                                   * Giving user some feedback.
                                   */
                                  micro.windows.info:View was successfully created
                                    class:micro-windows-info success
                                  micro.page.scroll-into-view:x:/@create-widgets/*/0?value

                              button
                                innerValue:Suggest
                                title:Allows you to suggest a new view for me to create.
                                onclick

                                  /*
                                   * Creates (yet another) a modal widget that displays the
                                   * process of suggesting a new view to the user.
                                   */
                                  create-widgets
                                    micro.widgets.modal:camphora-suggest-view
                                      widgets
                                        h3
                                          innerValue:Suggest a view
                                        p
                                          innerValue:@"If you want to suggest a view for Camphora Five,
you can <a target=""_blank"" href=""https://github.com/polterguy/phosphorusfive/issues"">submit an issue ticket</a>.
Notice, I normally prioritize creating new views suggested by paying customers of mine, unless your suggestion
is particularly intelligent. I also occassionally release (closed source) view templates only to paying customers.
If you would like to obtain a proprietary license for Phosphorus Five, and such become a paying customer of mine,
you can use the button below. All purchases comes with a 30 days guarantee, and are secured by PayPal."
                                        p
                                          innerValue:@"<strong>Notice</strong>, clicking the PayPal button below will
reload your page. Save your work first!"
                                        div
                                          class:center
                                          widgets
                                            a
                                              href:#
                                              class:jumbo-button center
                                              onclick

                                                /*
                                                 * Creating a lambda object for being evaluated on next pageload,
                                                 * before we reload the page.
                                                 */
                                                desktop.evaluate.on-next-pageload
                                                  lambda
                                                    desktop.license.check
                                                      force:bool:true

                                                /*
                                                 * Reloading location.
                                                 */
                                                p5.web.reload-location

                                              widgets
                                                span
                                                  innerValue:Purchase license
                                                literal
                                                  element:span
                                                  class:icon-paypal
                                        p
                                          innerValue:... then afterwards.
                                        h3
                                          class:center
                                          innerValue:@"<a target=""_blank"" href=""https://github.com/polterguy/phosphorusfive/issues"">Suggest a new view</a>"
                                        div
                                          class:right
                                          widgets
                                            button
                                              innerValue:I'll do this later thanks ...
                                              onclick

                                                /*
                                                 * Deleting (secondary) modal widget.
                                                 */
                                                delete-widget:camphora-suggest-view

                              button:camphora-close-create-view-button
                                innerValue:Close
                                title:Closes your create new view dialogue
                                onclick

                                  /*
                                   * Deleting modal widget.
                                   */
                                  delete-widget:camphora-select-template-view

            h3
              innerValue:Views
            br
              class:clearfix
            div
              .views
              widgets


/*
 * Scrolling edit widget into view.
 */
micro.page.scroll-into-view:x:/@create-widget?value
